# Load required libraries
library(shiny)
library(readr)
library(readxl)
library(dplyr)
library(ggplot2)
library(plotly)
library(rstatix)
library(bslib)
library(DT)

#UI
ui <- fluidPage(
  useShinyFeedback(),
  theme = bs_theme(
    bootswatch = "superhero",
    primary = "#2E8B57",
    success = "#28A745",
    info = "#17A2B8",
    warning = "#FFC107",
    danger = "#DC3545"
  ),
  
  # Custom CSS untuk mengatur warna teks di verbatimTextOutput
  tags$head(
    tags$style(HTML("
      .shiny-text-output {
        background-color: #f8f9fa !important;
        color: #000000 !important;
        border: 1px solid #dee2e6 !important;
        border-radius: 8px !important;
        padding: 15px !important;
        font-family: 'Courier New', monospace !important;
        font-weight: bold !important;
        font-size: 14px !important;
      }
      
      pre {
        color: #000000 !important;
        background-color: #f8f9fa !important;
      }
    "))
  ),

  # Header 
  div(
    class = "hero-section",
    style = "background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); 
             padding: 40px 0; margin-bottom: 30px; color: white; text-align: center;
             box-shadow: 0 4px 15px rgba(0,0,0,0.2);",
    h1("🔍 Uji Korelasi & Asosiasi", 
       style = "font-weight: bold; font-size: 2.5rem; margin-bottom: 10px; color: white;"),
    p("Evaluasi hubungan antar variabel numerik dan kategorik dengan visualisasi interaktif",
      style = "font-size: 1.2rem; opacity: 0.9; margin: 0; color: white;")
  ),
  
  sidebarLayout(
    sidebarPanel(
      width = 4,
      style = "background-color: #f8f9fa; border-radius: 10px; padding: 20px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);",
      
      # File upload dengan styling yang lebih baik
      div(
        style = "margin-bottom: 25px;",
        h4("📁 Data Input", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
        fileInput(
          "file", 
          label = NULL,
          placeholder = "Pilih file CSV atau Excel...",
          accept = c(".csv", ".xlsx"),
          buttonLabel = "Browse...",
          multiple = FALSE
        ),
        div(
          style = "font-size: 0.9rem; color: #495057; margin-top: 5px; font-weight: 500;",
          "Format yang didukung: CSV, XLSX"
        )
      ),

      # Spearman section dengan card styling
      div(
        class = "analysis-card",
        style = "background: white; padding: 20px; border-radius: 8px; margin-bottom: 20px; border-left: 4px solid #17a2b8; border: 1px solid #dee2e6;",
        h4("🔗 Uji Korelasi Spearman", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
        p("Untuk variabel numerik vs numerik", style = "font-size: 0.9rem; color: #495057; margin-bottom: 15px; font-weight: 500;"),
        uiOutput("spearman_ui")
      ),
      
      # Cramer's V section dengan card styling
      div(
        class = "analysis-card",
        style = "background: white; padding: 20px; border-radius: 8px; margin-bottom: 25px; border-left: 4px solid #28a745; border: 1px solid #dee2e6;",
        h4("🧩 Uji Asosiasi Cramér's V", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
        p("Untuk variabel kategorik vs kategorik", style = "font-size: 0.9rem; color: #495057; margin-bottom: 15px; font-weight: 500;"),
        uiOutput("cramer_ui")
      ),
      
      # Action buttons
      div(
        style = "text-align: center;",
        actionButton(
          "analyze", 
          label = tagList(icon("play-circle"), "Lakukan Analisis"),
          class = "btn btn-success btn-lg",
          style = "width: 100%; font-weight: bold; margin-bottom: 15px; padding: 12px; color: white; background-color: #28a745; border-color: #28a745;"
        ),
        uiOutput("download_ui")
      )
    ),

    mainPanel(
      width = 8,
      
      # Tab panel 
      tabsetPanel(
        id = "main_tabs",
        type = "pills",
        
        tabPanel(
          "Preview Data",
          icon = icon("table"),
          br(),
          div(
            style = "background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); border: 1px solid #dee2e6;",
            DT::dataTableOutput("preview")
          )
        ),
        
        tabPanel(
          "Ringkasan Data",
          icon = icon("chart-bar"),
          br(),
          div(
            style = "background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); border: 1px solid #dee2e6;",
            verbatimTextOutput("summary")
          )
        ),
        
        tabPanel(
          "Hasil Spearman",
          icon = icon("link"),
          br(),
          fluidRow(
            column(
              12,
              div(
                style = "background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); margin-bottom: 20px; border: 1px solid #dee2e6;",
                h4("Hasil Uji Statistik", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
                verbatimTextOutput("spearman_result")
              )
            )
          ),
          fluidRow(
            column(
              12,
              div(
                style = "background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); margin-bottom: 20px; border: 1px solid #dee2e6;",
                h4("Visualisasi", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
                plotlyOutput("spearman_plot", height = "500px")
              )
            )
          ),
          fluidRow(
            column(
              12,
              div(
                style = "background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); border: 1px solid #dee2e6;",
                h4("Interpretasi", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
                uiOutput("spearman_interpretation"),
                br(),
                uiOutput("spearman_detail")
              )
            )
          )
        ),
        
        tabPanel(
          "Hasil Cramér's V",
          icon = icon("puzzle-piece"),
          br(),
          fluidRow(
            column(
              12,
              div(
                style = "background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); margin-bottom: 20px; border: 1px solid #dee2e6;",
                h4("Hasil Uji Statistik", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
                verbatimTextOutput("cramer_result")
              )
            )
          ),
          fluidRow(
            column(
              12,
              div(
                style = "background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); margin-bottom: 20px; border: 1px solid #dee2e6;",
                h4("Visualisasi", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
                plotOutput("cramer_plot", height = "500px")
              )
            )
          ),
          fluidRow(
            column(
              12,
              div(
                style = "background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); border: 1px solid #dee2e6;",
                h4("Interpretasi", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
                uiOutput("cramer_interpretation"),
                br(),
                uiOutput("cramer_detail")
              )
            )
          )
        ),
        
        tabPanel(
          "Heatmap Korelasi",
          icon = icon("th"),
          br(),
          div(
            style = "background: white; padding: 20px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.05); border: 1px solid #dee2e6;",
            h4("Heatmap Korelasi Spearman", style = "color: #212529; margin-bottom: 15px; font-weight: bold;"),
            verbatimTextOutput("correlation_text"),
            br(),
            plotOutput("correlation_heatmap", height = "500px"),
            br(),
            uiOutput("heatmap_description")
          )
        )
      )
    )
  ),
  
  # Footer
  div(
    style = "background-color: #343a40; color: white; text-align: center; padding: 20px; margin-top: 40px;",
    p("© 2025 Aplikasi Uji Korelasi & Asosiasi", style = "margin: 0; font-size: 0.9rem; color: white; font-weight: 500;")
  )
)

# Server
server <- function(input, output, session) {
  
  # Reactive values untuk menyimpan hasil
  values <- reactiveValues(
    data = NULL,
    spearman_result = NULL,
    cramer_result = NULL,
    correlation_matrix = NULL,
    download_ready = FALSE
  )

output$download_report <- downloadHandler(
  filename = function() {
    paste("Laporan_Analisis_", Sys.Date(), ".docx", sep = "")
  },
  content = function(file) {
    # Memunculkan progress message menggunakan showNotification
    notification_id <- showNotification(
      "🔄 Sedang mempersiapkan laporan Word...", 
      duration = NULL, 
      type = "message"
    )
    
    tryCatch({
      # Buat file RMD sementara
      tempReport <- file.path(tempdir(), "report.Rmd")
      
      # Buat isi dari RMD ke file sementara
      writeLines(rmd_content, tempReport)
      
      # Render dokumen dengan parameter
      rmarkdown::render(
        input = tempReport,
        output_format = rmarkdown::word_document(),
        output_file = file,
        params = list(
          spearman = values$spearman_result,
          cramer = values$cramer_result,
          correlation = values$correlation_matrix
        ),
        envir = new.env(parent = globalenv()),
        quiet = TRUE
      )
      
      # Menghilangkan notifikasi progres
      removeNotification(notification_id)
      
      # Memunculkan notifikasi berhasil
      showNotification(
        "✅ Laporan Word berhasil diunduh!", 
        duration = 5, 
        type = "message"
      )
      
    }, error = function(e) {
      # Menghilangkan notifikasi progres
      removeNotification(notification_id)
      
      # Memunculkan notifikasi error
      showNotification(
        paste("❌ Error membuat laporan:", e$message), 
        duration = 10, 
        type = "error"
      )
      
      print(paste("Debug error:", e$message))  # For debugging
    })
  }
)

 # Validasi input
  if(is.null(input$spearman_x) || is.null(input$spearman_y) || 
     is.null(input$cramer_x) || is.null(input$cramer_y)) {
    showNotification(
      "❌ Silakan pilih variabel untuk analisis", 
      duration = 5, 
      type = "error"
    )
    return()
  }
  
  if(input$spearman_x == input$spearman_y) {
    showNotification(
      "❌ Pilih variabel yang berbeda untuk uji Spearman", 
      duration = 5, 
      type = "error"
    )
    return()
  }
  
  if(input$cramer_x == input$cramer_y) {
    showNotification(
      "❌ Pilih variabel yang berbeda untuk uji Cramér's V", 
      duration = 5, 
      type = "error"
    )
    return()
  }
  
  # Memunculkan loading notification
  loading_id <- showNotification(
    "🔄 Sedang melakukan analisis, mohon tunggu...", 
    duration = NULL, 
    type = "message"
  )
  
  tryCatch({
    # Spearman Correlation
    spearman_data <- values$data %>% 
      select(x = all_of(input$spearman_x), y = all_of(input$spearman_y)) %>% 
      filter(!is.na(x) & !is.na(y))
    
    if(nrow(spearman_data) < 3) {
      removeNotification(loading_id)
      showNotification(
        "❌ Data tidak cukup untuk uji Spearman (minimal 3 observasi)", 
        duration = 8, 
        type = "error"
      )
      return()
    }
    
    spearman_test <- cor.test(spearman_data$x, spearman_data$y, method = "spearman")
    
    values$spearman_result <- list(
      test = spearman_test, 
      x = input$spearman_x, 
      y = input$spearman_y,
      data = spearman_data
    )
    
    # Cramér's V
    cramer_data <- values$data %>% 
      select(x = all_of(input$cramer_x), y = all_of(input$cramer_y)) %>%
      filter(!is.na(x) & !is.na(y)) %>%
      mutate(
        x = as.factor(x),
        y = as.factor(y)
      )
    
    if(nrow(cramer_data) < 4) {
      removeNotification(loading_id)
      showNotification(
        "❌ Data tidak cukup untuk uji Cramér's V (minimal 4 observasi)", 
        duration = 8, 
        type = "error"
      )
      return()
    }
    
    tbl <- table(cramer_data$x, cramer_data$y)
    
    # Pastikan tidak ada sel dengan frekuensi 0 yang berlebihan
    if(any(dim(tbl) < 2)) {
      removeNotification(loading_id)
      showNotification(
        "❌ Variabel kategorik harus memiliki minimal 2 kategori", 
        duration = 8, 
        type = "error"
      )
      return()
    } 

   
    chisq_test <- chisq.test(tbl, correct = FALSE)
    n <- sum(tbl)
    V <- sqrt(chisq_test$statistic / (n * (min(nrow(tbl), ncol(tbl)) - 1)))
    
    values$cramer_result <- list(
      V = as.numeric(V), 
      pval = chisq_test$p.value, 
      x = input$cramer_x, 
      y = input$cramer_y,
      data = cramer_data,
      table = tbl,
      chisq = chisq_test
    )
    
    # Correlation matrix untuk heatmap
    num_data <- values$data %>% 
      select_if(is.numeric) %>% 
      select_if(~ sum(!is.na(.)) >= 3)  # Minimal 3 observasi valid
    
    if(ncol(num_data) >= 2) {
      corr_matrix <- cor(num_data, use = "pairwise.complete.obs", method = "spearman")
      values$correlation_matrix <- round(corr_matrix, 2)
    }
    
    # Tanda siap download
    values$download_ready <- TRUE
    
    # Menghilangkan loading notification
    removeNotification(loading_id)
    
    # Memunculkan success notification
    showNotification(
      "✅ Analisis berhasil diselesaikan! Lihat hasil di tab yang tersedia.", 
      duration = 8, 
      type = "message"
    )
    
  }, error = function(e) {
    # Menghilangkan loading notification
    removeNotification(loading_id)
    
    # Memunculkan error notification
    showNotification(
      paste("❌ Error saat analisis:", e$message), 
      duration = 10, 
      type = "error"
    )
  })
})

 # Render hasil Spearman
  output$spearman_result <- renderPrint({
    req(values$spearman_result)
    test <- values$spearman_result$test
    cat("Metode:", test$method, "\n")
    cat("Koefisien rho:", round(test$estimate, 4), "\n")
    cat("p-value:", format(test$p.value, scientific = TRUE), "\n")
    if(!is.null(test$conf.int)) {
      cat("95% CI:", paste(round(test$conf.int, 4), collapse = " - "), "\n")
    }
  })
  
  output$spearman_plot <- renderPlotly({
    req(values$spearman_result)
    
    spearman_data <- values$spearman_result$data
    p <- ggplot(spearman_data, aes(x = x, y = y)) +
      geom_point(color = "#E74C3C", alpha = 0.6, size = 2) +
      geom_smooth(method = "lm", se = TRUE, color = "#3498DB", fill = "#AED6F1") +
      theme_minimal() +
      theme(
        plot.title = element_text(size = 14, face = "bold", color = "#2c3e50"),
        axis.title = element_text(size = 12, color = "#2c3e50"),
        axis.text = element_text(size = 10, color = "#34495e"),
        panel.grid.minor = element_blank(),
        panel.grid.major = element_line(color = "#ecf0f1", size = 0.5)
      ) +
      labs(
        title = paste("Scatterplot:", values$spearman_result$x, "vs", values$spearman_result$y),
        x = values$spearman_result$x, 
        y = values$spearman_result$y
      )
    
    ggplotly(p, tooltip = c("x", "y"))
  })
  
  output$spearman_interpretation <- renderUI({
    req(values$spearman_result)
    
    test <- values$spearman_result$test
    r <- round(test$estimate, 3)
    pval <- test$p.value
    
    # Interpretasi kekuatan korelasi
    strength <- if(abs(r) >= 0.7) "kuat" else if(abs(r) >= 0.3) "sedang" else "lemah"
    direction <- if(r > 0) "positif" else "negatif"
    
    interpret <- if (pval < 0.05) {
      paste0("✅ <strong style='color: #28a745; font-weight: bold;'>Signifikan</strong> (p < 0.05): Terdapat korelasi yang signifikan antara variabel.")
    } else {
      paste0("❌ <strong style='color: #dc3545; font-weight: bold;'>Tidak signifikan</strong> (p > 0.05): Tidak terdapat korelasi yang signifikan antara variabel.")
    }
    
    HTML(paste0(
      "<div style='background: #f8f9fa; padding: 15px; border-radius: 8px; border-left: 4px solid #17a2b8; border: 1px solid #dee2e6;'>",
      "<h5 style='color: #212529; margin-bottom: 10px; font-weight: bold;'>📊 Interpretasi Hasil</h5>",
      "<p style='color: #212529; font-weight: 500;'><strong>Korelasi:</strong> ", r, " (", strength, ", ", direction, ")</p>",
      "<p style='color: #212529; font-weight: 500;'>", interpret, "</p>",
      "</div>"
    ))
  })
  
  output$spearman_detail <- renderUI({
    req(values$spearman_result)
    
    HTML(paste0(
      "<div style='background: #fff3cd; padding: 15px; border-radius: 8px; border-left: 4px solid #ffc107; border: 1px solid #ffeaa7;'>",
      "<h6 style='color: #212529; font-weight: bold;'>💡 Penjelasan Uji Spearman</h6>",
      "<p style='margin-bottom: 5px; color: #212529; font-weight: 500;'><strong>Tujuan:</strong> Mengukur kekuatan dan arah hubungan monoton antara dua variabel numerik</p>",
      "<p style='margin-bottom: 5px; color: #212529; font-weight: 500;'><strong>Asumsi:</strong> Data tidak harus terdistribusi normal</p>",
      "<p style='margin: 0; color: #212529; font-weight: 500;'><strong>Interpretasi rho:</strong> -1 (korelasi negatif sempurna) hingga +1 (korelasi positif sempurna)</p>",
      "</div>"
    ))
  })

 # Render hasil Cramér's V
  output$cramer_result <- renderPrint({
    req(values$cramer_result)
    cat("Uji Asosiasi Cramér's V\n")
    cat("========================\n")
    cat("Cramér's V:", round(values$cramer_result$V, 4), "\n")
    cat("Chi-square:", round(values$cramer_result$chisq$statistic, 4), "\n")
    cat("p-value:", format(values$cramer_result$pval, scientific = TRUE), "\n")
    cat("Degrees of freedom:", values$cramer_result$chisq$parameter, "\n")
  })
  
  output$cramer_plot <- renderPlot({
    req(values$cramer_result)
    
    # Buat mosaic plot yang lebih menarik
    tbl <- values$cramer_result$table
    df_plot <- as.data.frame(tbl)
    names(df_plot) <- c("X", "Y", "Freq")
    
    ggplot(df_plot, aes(x = X, y = Y)) +
      geom_tile(aes(fill = Freq), color = "white", size = 0.5) +
      geom_text(aes(label = Freq), color = "white", fontface = "bold", size = 4) +
      scale_fill_gradient(low = "#3498DB", high = "#E74C3C", name = "Frekuensi") +
      theme_minimal() +
      theme(
        plot.title = element_text(size = 14, face = "bold", hjust = 0.5, color = "#2c3e50"),
        axis.title = element_text(size = 12, color = "#2c3e50"),
        axis.text = element_text(size = 10, color = "#34495e"),
        legend.position = "right",
        legend.title = element_text(color = "#2c3e50"),
        legend.text = element_text(color = "#2c3e50"),
        panel.grid = element_blank()
      ) +
      labs(
        title = paste("Heatmap Kontingensi:", values$cramer_result$x, "vs", values$cramer_result$y),
        x = values$cramer_result$x, 
        y = values$cramer_result$y
      )
  })
  
  output$cramer_interpretation <- renderUI({
    req(values$cramer_result)
    
    V <- round(values$cramer_result$V, 3)
    pval <- values$cramer_result$pval
    
    # Interpretasi kekuatan asosiasi
    strength <- if(V >= 0.5) "kuat" else if(V >= 0.3) "sedang" else if(V >= 0.1) "lemah" else "sangat lemah"
    
    interpret <- if (pval < 0.05) {
      paste0("✅ <strong style='color: #28a745; font-weight: bold;'>Signifikan</strong> (p < 0.05): Terdapat asosiasi yang signifikan antara variabel.")
    } else {
      paste0("❌ <strong style='color: #dc3545; font-weight: bold;'>Tidak signifikan</strong> (p > 0.05): Tidak terdapat asosiasi yang signifikan antara variabel.")
    }
    
    HTML(paste0(
      "<div style='background: #f8f9fa; padding: 15px; border-radius: 8px; border-left: 4px solid #28a745; border: 1px solid #dee2e6;'>",
      "<h5 style='color: #000000; margin-bottom: 10px; font-weight: bold;'>📊 Interpretasi Hasil</h5>",
      "<p style='color: #000000; font-weight: bold;'><strong>Cramér's V:</strong> ", V, " (asosiasi ", strength, ")</p>",
      "<p style='color: #000000; font-weight: bold;'>", interpret, "</p>",
      "</div>"
    ))
  })
  
  output$cramer_detail <- renderUI({
    HTML(paste0(
      "<div style='background: #fff3cd; padding: 15px; border-radius: 8px; border-left: 4px solid #ffc107; border: 1px solid #ffeaa7;'>",
      "<h6 style='color: #000000; font-weight: bold;'>💡 Penjelasan Uji Cramér's V</h6>",
      "<p style='margin-bottom: 5px; color: #000000; font-weight: bold;'><strong>Tujuan:</strong> Mengukur kekuatan asosiasi antara dua variabel kategorik</p>",
      "<p style='margin-bottom: 5px; color: #000000; font-weight: bold;'><strong>Range:</strong> 0 (tidak ada asosiasi) hingga 1 (asosiasi sempurna)</p>",
      "<p style='margin: 0; color: #000000; font-weight: bold;'><strong>Interpretasi:</strong> >0.5 (kuat), 0.3-0.5 (sedang), 0.1-0.3 (lemah), <0.1 (sangat lemah)</p>",
      "</div>"
    ))
  })
  
  output$correlation_text <- renderPrint({
    req(values$correlation_matrix)
    cat("Matrix Korelasi Spearman untuk semua variabel numerik:\n\n")
    
    # Format matrix seperti gambar kedua
    mat <- values$correlation_matrix
    var_names <- colnames(mat)
    
    # Print header dengan spacing yang tepat
    cat(sprintf("%-15s", ""), paste(sprintf("%10s", var_names), collapse = ""), "\n")
    
    # Print setiap baris dengan nama variabel
    for(i in 1:nrow(mat)) {
      cat(sprintf("%-15s", rownames(mat)[i]))
      for(j in 1:ncol(mat)) {
        cat(sprintf("%10.2f", mat[i,j]))
      }
      cat("\n")
    }
  })

  # Correlation heatmap
  output$correlation_heatmap <- renderPlot({
    req(values$correlation_matrix)
    
    # Konversi matrix ke format long untuk ggplot
    melted_corr <- melt(values$correlation_matrix)
    
    ggplot(melted_corr, aes(Var1, Var2, fill = value)) +
      geom_tile(color = "white", size = 0.5) +
      scale_fill_gradient2(low = "#E74C3C", high = "#27AE60", mid = "white", 
                           midpoint = 0, limit = c(-1,1), space = "Lab", 
                           name="Korelasi\nSpearman") +
      geom_text(aes(label = value), color = "black", fontface = "bold", size = 4) +
      theme_minimal() +
      theme(
        plot.title = element_text(size = 16, face = "bold", hjust = 0.5, color = "#000000"),
        axis.title = element_blank(),
        axis.text.x = element_text(angle = 45, hjust = 1, color = "#000000", size = 12, face = "bold"),
        axis.text.y = element_text(color = "#000000", size = 12, face = "bold"),
        legend.title = element_text(color = "#000000", face = "bold"),
        legend.text = element_text(color = "#000000", face = "bold"),
        panel.grid = element_blank()
      ) +
      labs(title = "Heatmap Korelasi Spearman Antar Variabel Numerik") +
      coord_fixed()
  })
  
  output$heatmap_description <- renderUI({
    req(values$correlation_matrix)
    HTML(paste0(
      "<div style='background: #e3f2fd; padding: 15px; border-radius: 8px; border-left: 4px solid #2196f3; border: 1px solid #bbdefb;'>",
      "<h6 style='color: #000000; font-weight: bold;'>📈 Interpretasi Heatmap</h6>",
      "<p style='margin-bottom: 8px; color: #000000; font-weight: bold;'><strong>Warna Merah:</strong> Korelasi negatif (semakin gelap = semakin kuat)</p>",
      "<p style='margin-bottom: 8px; color: #000000; font-weight: bold;'><strong>Warna Hijau:</strong> Korelasi positif (semakin gelap = semakin kuat)</p>",
      "<p style='margin-bottom: 8px; color: #000000; font-weight: bold;'><strong>Warna Putih:</strong> Tidak ada korelasi (mendekati 0)</p>",
      "<p style='margin: 0; color: #000000; font-weight: bold;'><strong>Angka dalam sel:</strong> Nilai koefisien korelasi Spearman</p>",
      "</div>"
    ))
  })

# Load data dengan error handling
  observeEvent(input$file, {
    tryCatch({
      ext <- tools::file_ext(input$file$name)
      if (ext == "csv") {
        values$data <- read_csv(input$file$datapath, locale = locale(encoding = "UTF-8"))
      } else if (ext == "xlsx") {
        values$data <- read_excel(input$file$datapath)
      }
      
      # Reset download status ketika file baru diupload
      values$download_ready <- FALSE
      
      # Gunakan showModal untuk menampilkan pesan sukses
      showModal(modalDialog(
        title = "✅ Upload Berhasil",
        "Data berhasil dimuat!",
        easyClose = TRUE,
        footer = modalButton("OK")
      ))
      
    }, error = function(e) {
      # Gunakan showModal untuk menampilkan pesan error
      showModal(modalDialog(
        title = "❌ Error Loading File",
        paste("Terjadi kesalahan saat memuat file:", e$message),
        easyClose = TRUE,
        footer = modalButton("OK")
      ))
    })
  })
  
  output$preview <- DT::renderDataTable({
    req(values$data)
    DT::datatable(
      values$data,
      options = list(
        scrollX = TRUE,
        pageLength = 10,
        dom = 'Bfrtip',
        buttons = c('copy', 'csv', 'excel')
      ),
      class = "display table-striped table-hover"
    )
  })
  
  output$summary <- renderPrint({
    req(values$data)
    summary(values$data)
  })
  
  output$spearman_ui <- renderUI({
    req(values$data)
    num_vars <- names(select_if(values$data, is.numeric))
    
    if(length(num_vars) < 2) {
      div(
        style = "color: #dc3545; font-style: italic; font-weight: 500;",
        "Minimal diperlukan 2 variabel numerik untuk uji Spearman"
      )
    } else {
      tagList(
        div(
          style = "margin-bottom: 10px;",
          strong("Variabel Numerik X:", style = "color: #212529; font-size: 14px; font-weight: bold;")
        ),
        selectInput(
          "spearman_x", 
          label = NULL,
          choices = num_vars,
          selected = num_vars[1]
        ),
        div(
          style = "margin-bottom: 10px; margin-top: 15px;",
          strong("Variabel Numerik Y:", style = "color: #212529; font-size: 14px; font-weight: bold;")
        ),
        selectInput(
          "spearman_y", 
          label = NULL,
          choices = num_vars,
          selected = if(length(num_vars) > 1) num_vars[2] else num_vars[1]
        )
      )
    }
  })

# Template buat laporan di Word
  rmd_content <- '---
title: "Laporan Analisis Korelasi dan Asosiasi"
author: "Aplikasi Uji Korelasi & Asosiasi"
date: "r Sys.Date()"
output: 
  word_document:
    reference_docx: NULL
params:
  spearman: NULL
  cramer: NULL
  correlation: NULL
---

{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(knitr)
library(ggplot2)
library(reshape2)


# Executive Summary

Laporan ini menyajikan hasil analisis hubungan antar variabel menggunakan:

1. *Uji Korelasi Spearman* untuk menganalisis hubungan antara variabel numerik
2. *Uji Asosiasi Cramér\'s V* untuk menganalisis hubungan antara variabel kategorik

# Hasil Uji Korelasi Spearman

{r spearman-results}
if (!is.null(params$spearman)) {
  test <- params$spearman$test
  cat("Variabel yang dianalisis:", params$spearman$x, "vs", params$spearman$y, "\\n")
  cat("Metode:", test$method, "\\n")
  cat("Koefisien rho:", round(test$estimate, 4), "\\n")
  cat("p-value:", format(test$p.value, scientific = TRUE), "\\n")
  
  # Interpretasi
  r <- round(test$estimate, 3)
  pval <- test$p.value
  strength <- if(abs(r) >= 0.7) "kuat" else if(abs(r) >= 0.3) "sedang" else "lemah"
  direction <- if(r > 0) "positif" else "negatif"
  significance <- if(pval < 0.05) "signifikan" else "tidak signifikan"
  
  cat("\\nInterpretasi:\\n")
  cat("- Kekuatan korelasi:", strength, "\\n")
  cat("- Arah korelasi:", direction, "\\n")  
  cat("- Signifikansi:", significance, "(α = 0.05)\\n")
} else {
  cat("Data Spearman tidak tersedia")
}


---

# Hasil Uji Asosiasi Cramér\'s V

{r cramer-results}
if (!is.null(params$cramer)) {
  cat("Variabel yang dianalisis:", params$cramer$x, "vs", params$cramer$y, "\\n")
  cat("Cramér\'s V:", round(params$cramer$V, 4), "\\n")
  cat("Chi-square:", round(params$cramer$chisq$statistic, 4), "\\n")
  cat("p-value:", format(params$cramer$pval, scientific = TRUE), "\\n")
  cat("Degrees of freedom:", params$cramer$chisq$parameter, "\\n")
  
  # Interpretasi
  V <- round(params$cramer$V, 3)
  pval <- params$cramer$pval
  strength <- if(V >= 0.5) "kuat" else if(V >= 0.3) "sedang" else if(V >= 0.1) "lemah" else "sangat lemah"
  significance <- if(pval < 0.05) "signifikan" else "tidak signifikan"
  
  cat("\\nInterpretasi:\\n")
  cat("- Kekuatan asosiasi:", strength, "\\n")
  cat("- Signifikansi:", significance, "(α = 0.05)\\n")
} else {
  cat("Data Cramér\'s V tidak tersedia")
}

# Matrix Korelasi

{r correlation-matrix}
if (!is.null(params$correlation)) {
  kable(params$correlation, 
        caption = "Matrix Korelasi Spearman untuk semua variabel numerik",
        digits = 3,
        align = "c")
} else {
  cat("Matrix korelasi tidak tersedia\\n")
}
